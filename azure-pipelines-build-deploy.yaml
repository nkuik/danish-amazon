trigger:
- master

# Don't run against PRs
pr: none

name: $(build.sourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

variables:
- group: 'test-build-release'
- name: imageName
  value: '$(docker_id)/slack-client'

stages:
# - stage: Build
#   displayName: Build docker images
#   jobs:
#   - job: Build
#     displayName: Build Docker images
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - script: docker build -f Dockerfile -t $(imageName) .
#       displayName: 'docker build'
#     - script: docker login -u $(docker_id) -p $(docker_token)
#       displayName: 'docker login'
#     - script: |
#             docker tag $(imageName) $(imageName):$(build.buildNumber)
#             docker push $(imageName):$(build.buildNumber)
#       displayName: 'docker push with build number'
#     - task: PublishPipelineArtifact@1
#       inputs:
#         artifactName: 'manifests'
#         path: 'manifests'

- stage: Deploy
  displayName: Deploy to Kubernetes
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy to Kubernetes
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: |
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
      displayName: Install AWS cli
    - bash: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
      displayName: Install kubectl
    - bash: |
        aws2 configure
        aws2 eks --region eu-west-1 update-kubeconfig --name too-good-to-go-practice
        kubectl apply -f manifests/deploy-robot-conf.yaml
      env:
        AWS_ACCESS_KEY_ID: $(aws_access_key_id)
        AWS_SECRET_ACCESS_KEY: $(aws_secret_access_key)
